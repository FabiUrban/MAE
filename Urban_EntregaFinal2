/*Urban_EntregaFinal1
 El programa es una sintesis de color de la parte superior e inferior del video 
 The reflecting pool de Bill Viola
 A su vez se envía la visualidad obtenida a Resolume Arena para hacer el mapping de la videoinstalación
 */


import processing.video.*; 
Movie movie; 

long a=0, r=0, g=0, b=0;
long a1=0, r1=0, g1=0, b1=0;

import codeanticode.syphon.*;
SyphonServer server;



void setup() { 
  size(640, 480, P3D);  //para usar con Shyphon
  server = new SyphonServer(this, "Processing Syphon");
  movie = new Movie(this, "thereflectingpoolSilente.mov"); 
  //frameRate(100);
  movie.loop();
  noStroke();
}

void movieEvent(Movie movie) {  
  movie.read();
}



void draw() {
  imageMode(CENTER);
  image(movie, width/2, height/2);

  server.sendScreen();


  // color promedio de la mitad de arriba de pantalla usando el largo del array/2 de la imagen
  loadPixels(); //cargamos todos los pixeles del video, ya que es un array con pixels.length
  for (int i = 0; i < pixels.length/2; i++) { //recorremos el array desde el px 0 a la mitad de pantalla, 102400px
    color argb = pixels[i];
    //a += (argb >> 24) & 0xFF; //a es para alfa, que no uso.
    r += (argb >> 16) & 0xFF;  // (right shift) la forma mas rápida de obtener los colores red(argb) //>>  El número a la izquierda del operador se desplaza el número de lugares especificado por el número a la derecha.
    g += (argb >> 8) & 0xFF;   //  & 0xFF se usa en java para 0x indicar un número hexadecimal
    b += argb & 0xFF;          // El  hexadecimal literal para 0xFF es un int(255), por eso es la forma mas r'apida de obtener colores
  }
  
  g=g/pixels.length;
  b=b/pixels.length;
  r=r/pixels.length;

  //mitad de pantalla arriba
  fill(r, g, b);
  noStroke();
  rectMode(CORNER);
  rect(0, 0, 640, 240);

  ////color promedio de la mitad de abajo de la pantalla
  for (int i = pixels.length/2/3; i < pixels.length; i++) {
    color argb = pixels[i];
    //a1 += (argb >> 24) & 0xFF;
    r1 += (argb >> 16) & 0xFF;  
    g1 += (argb >> 8) & 0xFF;   
    b1 += argb & 0xFF;
  }

  g1=g1/pixels.length;
  b1=b1/pixels.length;
  r1=r1/pixels.length;

  ////mitad de pantalla abajo
  fill(r1, g1, b1);
  noStroke();
  rectMode(CORNER);
  rect(0, 240, 640, 240);
}
